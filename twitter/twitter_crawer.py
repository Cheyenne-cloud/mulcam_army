# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hBTsyAoXgp_Bb11w0HHYbn4daWYgh36p
"""

import pandas as pd
import numpy as np
import requests
from bs4 import BeautifulSoup as bs
import json, csv

data = pd.read_csv('/content/drive/MyDrive/ML Deep/artist.csv')
name_artist = data.artistsName
name_artist

# !pip install python-twitter

#트위터의 개인 앱 계정에서 아래 4가지 사항 확인
consumer_key = "xEgs1OPq00opCqFN1mZotiaqd"
consumer_secret = "9wVr1mBjxgXvpsFeXnEUTFW8eX8nJbadRJ0jpXIvFhYhK6MSDJ"
access_token = "1430024043634118662-qaQhHC44eN2KWO7eYa8nn4cecg6gdD"
access_token_secret = "XU812kRWuxU29mBFTg8HbMNnROuR1aJRTuH36oaxD08gi"

import twitter
twitter_api = twitter.Api(consumer_key=consumer_key,
                          consumer_secret=consumer_secret, 
                          access_token_key=access_token, 
                          access_token_secret=access_token_secret)

# API 접근
import tweepy
from tweepy import OAuthHandler, API
auth = OAuthHandler(consumer_key,consumer_secret)
auth.set_access_token(access_token,access_token_secret)

api = API(auth)

# 검색하기 GetSearch() -- twitter 방식
query = "BTS"
statuses = twitter_api.GetSearch(term=query, count=10)

for status in statuses:
    print(status.text)

# tweepy 방식 -- 실시간
keyword = name_artist[0]
max_tweets = 1500 # 최대 검색 트윗 수 
searched_tweets = []
last_id = -1

while len(searched_tweets) < max_tweets:
  count = max_tweets - len(searched_tweets)
  try:
    new_tweets = api.search(q = keyword, count = count)
    if not new_tweets:
      break
    searched_tweets.extend(new_tweets)
    last_id = new_tweets[-1].id

  except tweepy.TweepError as e:
    break

# 트윗에서 정보 추출
name = []
id = []
mention = []
date = []
time = []

for tweet in searched_tweets:
  created_time = str(tweet.created_at)
  time_split = created_time.split()

  name.append(tweet.user.name)
  id.append('@' + tweet.user.screen_name)
  mention.append(tweet.text)
  date.append(time_split[0])
  time.append(time_split[1])

# 추출 정보로 딕셔너리 생성
data_info = {}
data_info['닉네임'] = name
data_info['ID'] = id
data_info['내용'] = mention
data_info['날짜'] = date
data_info['시간'] = time

data_info_frame = pd.DataFrame(data_info)

addr = '/content/drive/MyDrive/ML Deep/'
data_info_frame.to_excel(addr+keyword+'.xlsx')